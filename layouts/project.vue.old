
<script setup>
import { useRoute } from 'vue-router';
const route = useRoute();

// remove trailing slash from path
const actualPath = route.path.replace(/\/$/, '');

const { data } = await useAsyncData(`content-${actualPath}`, () =>
  queryContent().where({ _path: actualPath }).findOne()
)
</script>


<template>
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <header class="mt-10 mx-auto max-w-screen-xl px-1 sm:mt-12 md:mt-16 lg:mt-32 relative">
      <div class="text-left relative">
        <h1 class="font-rubik font-black text-cyan-200 text-3xl sm:text-4xl md:text-5xl glow-cyan-txt "><!--pb-2 -->
          {{ data.title }}
        </h1>
        <h2
          class="font-rubik text-slate-200 text-opacity-80 text-md sm:text-xl md:text-xl glow-cyan-txt pb-20 font-medium">
          {{ data.subtitle }}
        </h2>
      </div>
    </header>

    <main class="pb-20 lg:pb-28 px-1 pt-3 relative ">
      <div class="grid gap-24 grid-cols-4">
        <!-- Main Content -->
        <section class="col-span-3">
          <ContentRenderer ref="contentRenderer" class="contentRenderer" :value="data" />
        </section>


        <aside ref="toc" class="col-span-1 lg:flex lg:flex-col">
          <div class="sticky top-16">
            <TableOfContents :activeTocId="activeTocId"/>
            <!-- <header class="uppercase text-cyan-200 glow-cyan-txt font-rubik font-medium text-lg lg:mt-9 tracking-wider">
              Table of Contents
            </header>
            <nav class="mt-4 ">
              <ul>
                <li @click="tableOfContentsHeadingClick(link)" :class="{
                  'pl-4': link.depth === 3
                }" class="toc-list" v-for="link of data.body.toc.links" :key="link.id">
                  <a :class="{
                    'text-lime-300 hover:text-lime-400 toc-item':
                      link.id === currentlyActiveToc,
                    'text-cyan-200 hover:text-cyan-300 toc-item': link.id !== currentlyActiveToc
                  }" role="button"
                    class="transition-colors duration-75 font-jbmono transition hover:scale-101 hover:duration-200 hover:font-black hover:transition ease-in-out duration-900 font-medium mb-2 block"
                    :href="`#${link.id}`">{{ link.text }}
                  </a>
                </li>
              </ul>
            </nav> -->
          </div>
        </aside>

      </div>
    </main>
  </div>
</template>



<style scoped>
main :deep(h2) {
  --at-apply: font-rubik text-yellow-400 text-3xl sm:text-4xl md:text-4xl glow-yellow-txt font-bold pt-7 pb-1;
}

main :deep(h3) {
  --at-apply: font-rubik text-lime-400 text-2xl sm:text-3xl md:text-3xl pt-7 pb-2 font-bold;
}

main :deep(h4) {
  --at-apply: font-rubik text-lime-400 text-xl sm:text-2xl md:text-2xl pt-7 pb-2 font-medium;
}

main :deep(li::marker) {
  --at-apply: font-ubuntu text-gray-400 glow-cyan-txt font-bold text-18.5px;
}

main :deep(li) {
  --at-apply: font-ubuntu text-cyan-100 text-18.5px;
}

main :deep(p) {
  --at-apply: font-ubuntu text-slate-100 text-18.5px glow-cyan-txt font-medium py-2 leading-relaxed;
}

main :deep(a:not(h1 a):not(h2 a):not(h3 a):not(h4 a):not(h5 a):not(h6 a):not(.toc-item)) {
  --at-apply: font-black text-blue-300 glow-cyan-txt underline decoration-1;
}

main :deep(pre code) {
  --at-apply: text-17px font-jbmono;
}

/* main :deep(pre) {
  --at-apply: font-ubuntu text-slate-100 text-base glow-cyan-txt font-medium py-2 bg-gray-900 rounded-xl -inset-4  shadow-lg ;
} */
</style>